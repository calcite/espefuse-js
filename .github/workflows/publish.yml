on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"
      - name: Install dependencies and build ðŸ”§
        run: npm ci
      - name: Package module
        run: npm pack
      - name: Verify tag version is the same as package.json version
        id: version
        run: |
          [ ${GITHUB_REF:11} = $(node -p "require('./package.json').version") ]
          echo "version=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: Upload package file
        uses: actions/upload-artifact@v3
        with:
          name: alcz-espefuse-js-${{ steps.version.outputs.version }}.tgz
          path: alcz-espefuse-js-${{ steps.version.outputs.version }}.tgz
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ESPEFUSE-JS ${{ github.ref }}
          draft: true
          body: |
            ### Release Highlights

            ### Features & Enhancements

            <!-- Insert The Features and Enhancements below as points possibly add the link to the PR/commit -->

            ### Bug Fixes

            <!-- Insert The Bug Fixes below as points, also add relevant links -->
      - name: Upload release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./alcz-espefuse-js-${{ steps.version.outputs.version }}.tgz
          asset_name: alcz-espefuse-js-${{ steps.version.outputs.version }}.tgz
          asset_content_type: application/zip
      - name: Publish package on NPM ðŸ“¦
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
